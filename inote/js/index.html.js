// Generated by CoffeeScript 1.7.1
(function() {
  var buildNotebookList, storage;

  buildNotebookList = (function(_this) {
    return function(data) {
      var key_name, key_names, last_access, last_owner, name_parts, notebook_access, notebook_name, notebook_owner, s, _i, _len;
      key_names = data.split("\n");
      s = "";
      last_owner = "";
      last_access = "";
      for (_i = 0, _len = key_names.length; _i < _len; _i++) {
        key_name = key_names[_i];
        name_parts = key_name.split("/");
        if (name_parts.length < 3) {
          continue;
        }
        notebook_owner = name_parts[0];
        notebook_access = name_parts[1];
        notebook_name = name_parts[2];
        if (last_owner !== notebook_owner) {
          s += "<div style='padding-left: 0px;'>" + notebook_owner + "</div>";
          last_owner = notebook_owner;
        }
        if (last_access !== notebook_access) {
          s += "<div  style='padding-left: 25px; color:" + (notebook_access === "private" ? "black" : "") + ";  '>" + notebook_access + "</div>";
          last_access = notebook_access;
        }
        s += "<div style='padding-left: 50px;'>\n   <a \n   href='/page?owner=" + (encodeURIComponent(notebook_owner)) + "&access=" + (encodeURIComponent(notebook_access)) + "&name=" + (encodeURIComponent(notebook_name)) + "'\n   >" + notebook_name + "</a>&nbsp;&nbsp;&nbsp;\n   <span class='toolButton' title='delete' onclick='deleteNotebook(\"" + key_name + "\")'>&#x00D7</span>\n</div>";
      }
      return $("#notebookList").html(s);
    };
  })(this);

  this.deleteNotebook = function(key_name) {
    if (!confirm("Are you sure?")) {
      return;
    }
    $.ajax({
      url: "/delete",
      dataType: "text",
      data: {
        key_name: key_name
      },
      success: function(data) {
        return setTimeout('location.reload(true)', 100);
      },
      error: function(e) {
        return alert(e);
      }
    });
  };


  /*
   * HELLOJS
  prepareOAuthorization =() ->
       *$.getScript "/inote/libs/hello.min.js", ->
       * init 
      h ello.init
          facebook :'1517454335144201'
          windows:'0000000044121F60'
      ,
           *redirect_uri:'http://inote.vadimivlev.com'
          redirect_uri:'http://inote.vadimivlev.com/inote/html/login.html'
          display: 'popup'
  
  
       * on login ,call user information for the given network
      hello.on "auth.login", (auth) ->
        hello(auth.network).api("/me").success (r) ->
          console.log "auth.login"
          console.log r
          $page_ = $("#page")
          $div_ = $("""
              <div id='profile_'>
                  <img src='#{r.thumbnail}' style='width:50px; height:50px; border-radius:25px;vertical-align:middle;'/>
                  id: #{r.id}
                  name: #{r.name}
              </div>
              """).appendTo($page_)
          return
        return
      
       * on logout ,call user information for the given network
      hello.on "auth.logout", (auth) ->
          console.log "auth.logout"
          console.log auth
      
      
      buildLoginButtons = (oLogin)->
          addLoginLink =(iconClass, network) ->
              $("<a id='#{network}_login' class='#{iconClass}' href='' style='text-decoration:none; margin:3px'></a>").appendTo(oLogin).click (e) ->
                  e.preventDefault()
                  hello.login(network)
          
          addLoginLink "icon-windows", "windows"
          addLoginLink "icon-googleplus", "googleplus"
          addLoginLink "icon-githib", "github"
          addLoginLink "icon-wordpress", "wordpress"
          addLoginLink "icon-twitter", "twitter"
          addLoginLink "icon-linkedin", "linkedin"
      
      buildLogoutButton = (oLogout) ->
          addLogoutLink =(iconClass, network) ->
              $("<a id='#{network}_logout' class='#{iconClass}' href='' style='text-decoration:none; margin:3px'>logout</a>").appendTo(oLogout).click (e) ->
                  e.preventDefault()
                  hello.logout(network, {force:true})
                  location.reload()
          
          addLogoutLink "icon-windows", "windows"
  
      oauthHolder = $(".oauthHolder")
      oauthHolder.html ""
        
      oLogin = $("<span id='oLogin'></span>").appendTo oauthHolder
      $("<span>Login </span>").appendTo oLogin
      oLogout = $("<span id='oLogout'></span>").appendTo oauthHolder
      
      buildLoginButtons(oLogin)
      buildLogoutButton(oLogout)
      
       *TEST
      checkNetwork = (network) ->
          r=hello(network).getAuthResponse()
          butIn=oLogin.find("##{network}_login")
  
          butOut=oLogout.find("##{network}_logout")
          if r
              storage.list buildNotebookList
              oLogin.hide()
              butIn.hide()
              butOut.show()
              console.log r
          else
              oLogin.show()
              butIn.show()
              butOut.hide()
      
      adjustGUI = () ->
          checkNetwork "windows"
          console.log "adjustGUI"
  
      adjustGUI()
   */

  storage = new NoteBookStorage();

  $(function() {
    var loginHolder;
    loginHolder = $(".loginHolder");
    if (loginHolder.text().match(/^{{/)) {
      loginHolder.load("/getloginlink");
    }
    if ($("#notebookList").text().match(/^{{/)) {
      storage.list(buildNotebookList);
    } else {
      buildNotebookList($("#notebookList").text());
    }
    return $("#btnCreate").click(function() {
      var newName;
      newName = "N" + (5000000 + Math.floor(999000 * Math.random()));
      return document.location.href = "/page?owner=" + encodeURIComponent($("#userName").text()) + "&access=" + encodeURIComponent("public") + "&name=" + encodeURIComponent(newName);
    });
  });

}).call(this);

//# sourceMappingURL=index.html.map
