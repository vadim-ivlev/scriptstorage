###*

 `cake` - просмотр списка задач
 `cake <имяЗадачи>` - запуск задачи

###


fs = require "fs"
{exec, spawn} = require 'child_process'


task "server", "start HTTP server. (npm install -g http-server)", ->
    execOut "http-server"


task "rebuild", "rebuild all", ->
    rebuild()


task "watch", "Watch for changes and regenerate js, css и html.", ->
    fs.watch 'coffee',  (event, filename) -> postpone  -> generateJs()
    fs.watch 'jade',  (event, filename) -> postpone  -> generateHtml()
    fs.watch 'less',  (event, filename) -> postpone  -> generateCss()


###
task 'deploy', '', ->
    execOut "tar -czf .upload.tgz *", (commandLine, err, stdout, stderr) ->
        execOut "ssh -i .Tester.key Tester-1@memorial06.cloudapp.net rm -rf /var/www/podvig-html", (commandLine, err, stdout, stderr) ->
            execOut "ssh -i .Tester.key Tester-1@memorial06.cloudapp.net mkdir /var/www/podvig-html", (commandLine, err, stdout, stderr) ->
                execOut "scp -r -i .Tester.key .upload.tgz Tester-1@memorial06.cloudapp.net:/var/www/podvig-html", (commandLine, err, stdout, stderr) ->
                    execOut "ssh -i .Tester.key Tester-1@memorial06.cloudapp.net tar xzf /var/www/podvig-html/.upload.tgz -C /var/www/podvig-html", (commandLine, err, stdout, stderr) ->
                        execOut "ssh -i .Tester.key Tester-1@memorial06.cloudapp.net rm -f /var/www/podvig-html/.upload.tgz", (commandLine, err, stdout, stderr) ->            
###



rebuild = ->
    generateJs()
    generateHtml()
    generateCss()


generateHtml = (onDone)->
    execOut "jade -P jade/ -o './'", onDone


generateCss = ->
    execOut 'lessc  less/index.less  css/index.css'
    execOut 'lessc  less/inote.less  css/inote.css'


generateJs = ->
    removeGeneratedJsFiles()
    generateJsFiles()




# Сделает по одному js файлу на каждый коффе
generateJsFiles = (onDone)->
    execOut "coffee -m --output js/ --compile coffee/", onDone


# Удаляет js файлы генерированные из coffee
removeGeneratedJsFiles = ->
    for file in fs.readdirSync("coffee") when /\.coffee$/.test file
        try
            fs.unlinkSync "js/#{file.replace('.coffee','.js')}"
        catch err

        try
            fs.unlinkSync "js/#{file.replace('.coffee','.map')}"
        catch err




            
# Выполняет команду OS и печатает вывод и сообщения об ошибках
execOut = (commandLine, cb) ->
    console.log("> #{commandLine}")
    exec commandLine, (err, stdout, stderr) ->
        if stdout
            console.log(stdout)
        if stderr
            console.log(stderr)
        if(cb)
            cb(commandLine, err, stdout, stderr)
            


# calls func function in 200 msec.
# Windows fix. 
# Prevents multiple rebuilds 
# when file system generates several events on one file 
TT=0
postpone = (func)->
    clearTimeout TT
    TT = setTimeout func , 200
